{
  Al-Kharid Miner
  Author: ineedbot
  Date: 7/20/2022

  Mines at Al-Kharid
}

program AlKharidMiner;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I SRL/OSR.simba}

{$include_once ../Utils/Utils.simba}

{$include_once Types.simba}
{$include_once Config.simba}
{$include_once Utils.simba}
                           
{$include_once Bank.simba}
{$include_once Rock.simba}
{$include_once Misc.simba}

{
  Executes when we should do something about our full inventory
}
procedure TBot.DoFullInventory();
begin
  if Self.Banking then
  begin
    if not Self.DoBank() then
      Self.AfterActionAntiBan(True);
  end
  else
    Self.DropItems();
end;

{
  Main loop of the script.
}
procedure TBot.Run();
begin
  while Script.Running do
  begin
    if RSClient.IsLoggedIn() then
    begin
      // TODO randomize
      if Inventory.IsFull() then
        Self.DoFullInventory()
      else
      begin
        if not Self.DoGathering() then
          Self.AfterActionAntiBan(True);
      end;
    end
    else
    begin
      if Login.LoginPlayer() then
        Self.OnLogin();
    end;
    
    Self.DoMainLoopStuff('', False);
  end;
  
  Logout.ClickLogout();
  Script.WriteMsg('Stop reason: ' + Script.StopReason);
  TerminateScript('Time to shutdown');
end;

{
  When the player logs in.
}
procedure TBot.OnLogin();
begin
  // is this the first login?
  if not Script.DidLogin then
  begin
    Script.DidLogin := True;
      
    Script.UpdateZoomLevel();
  end;
  
  Script.HPAmount             := Minimap.GetHPLevel();
  MainScreen.SetHighestPitch();
  Script.Activity.Countdown.Restart();
end;

{
  Frees the stuff when script completes
}
procedure TBot.Free();
begin
end;

{
  Inits the script...
}
procedure TBot.Init();
var
  Worlds: TIntegerArray;
begin
  // init the player
  if _WORLDS[0] <> -1 then
    Worlds := _WORLDS;

  Login.AddPlayer(_USERNAME, _PASSWORD, _PIN, Worlds);
  Script.AntiBanEnergy.SetupBiometrics();
  Script.AntiBanEnergy.BoxPTRad := 0.3;
  Script.AntiBan.Name := 'Antiban';

  Script.Debug := DEBUGMODE;
  Script.Drawing := DRAWING;
  Script.Reporting := DOREPORTS;
  Script.ShiftClicking := SHIFTCLICK;
  Script.MiddleClicking := MIDDLECLICK;
  Script.KeyboardMenuButtons := MENUKEYBOARD;
  Script.Running := True;
  Script.SleepRate := 75;
  Script.DrawRate := 2500;
  Script.ReportRate := 2500;
  Script.Activity.Countdown.Init(ONE_MINUTE);
  Script.Activity.NoXPCountMax := 4;
  
  Script.ShutdownTime := (TOTALRUNTIME * 60000) + Random(- (TOTALRUNTIME * 6000), (TOTALRUNTIME * 6000));
  
  Mouse.Speed             := 20 + Round(BioRandomFixed() * 10) + Random(-2, 2);
  Script.BaseMouseSpeed := Mouse.Speed;
  Script.MaxTiredMouseSpeed := 10;
  Script.FastMouseAdd    := 20;
  Mouse.Distribution      := MOUSE_DISTRIBUTION_GAUSS;
  ItemFinder.Similarity   := ITEMFINDER_SIMILARITY;
  Mouse.OnMoving := @WhileMouseMovesLookForUpText;

  Script.AllowBreaks := True;
  Bank.FINDER_UPTEXT.Append('Deposit');
  Bank.FINDER_OPTION.Append('Deposit');
  
  // init the antiban stuff
  Script.Antiban.OnStartBreak    := @PauseRunTime;
  Script.Antiban.OnFinishBreak   := @ResumeRunTime;
  
  Script.Antiban.AddTask(ONE_MINUTE*1, @Mouse.RandomMovement);
  Script.Antiban.AddTask(ONE_SECOND*90, @Antiban.SetCompassNorth);
  //Script.Antiban.AddTask(ONE_MINUTE*1,  @Antiban.RandomRotate);
  Script.Antiban.AddTask(ONE_MINUTE*4,  @Antiban.DoLoseFocus);
  Script.Antiban.AddTask(ONE_MINUTE*45,  @Script.UpdateZoomLevel);
  Script.Antiban.AddTask(ONE_MINUTE*8,  @Antiban.HoverMSItems);
  Script.Antiban.AddTask(ONE_MINUTE*12,  @Antiban.HoverMSNPCs);
  Script.Antiban.AddTask(ONE_MINUTE*16,  @Antiban.HoverMSPlayers);
  Script.Antiban.AddTask(ONE_MINUTE*10,  @Self.DoSkillHover);
  Script.Antiban.AddBreak(ONE_MINUTE*18, ONE_SECOND*40, 0.2, 0.0);
  
  if TAKEBREAKS then
  begin
    Script.Antiban.AddBreak(ONE_MINUTE*45, ONE_MINUTE*5, 0.2, 0.25);
    Script.Antiban.AddBreak(ONE_HOUR*2, ONE_MINUTE*10, 0.2, 0.5);
    Script.Antiban.AddBreak(ONE_HOUR*4, ONE_MINUTE*45, 0.2, 0.75);
    Script.Antiban.AddBreak(ONE_HOUR*17, ONE_HOUR*7, 0.2, 1.0);
  end;

  Self.RSW.Setup('world');
  Self.RSW.ScreenWalk     := MSWALKING;

  Self.Specing := USESPEC;
  Self.Banking := BANKORES;
  Self.SelfBoxRadiusExpand := 1.3;
  
  // location specific stuff
  Self.RockOptions := ['Mine Rocks', 'Mine'];
  Self.RockUptexts := ['Mine Rocks', 'Mine'];
  Self.OreItems := ['Iron ore'];
  Self.MineWaitTime := 10000;
  Self.ToolItems := ['Bronze pickaxe', 'Iron pickaxe', 'Steel pickaxe', 'Black pickaxe', 'Mithril pickaxe', 'Adamant pickaxe',
    'Rune pickaxe', 'Gilded pickaxe', 'Dragon pickaxe', '3rd age pickaxe', 'Crystal pickaxe'];

  Self.RockTiles := [Point(-1, -1){, Point(4985, 3209), Point(4990, 3205), Point(4990, 3213)}];
  Self.RockWalkTile := Point(4990, 3209);

  Self.ToRocksPaths := [
    [[4890, 3783], [4903, 3783], [4913, 3767], [4926, 3732], [4937, 3701], [4935, 3672], [4940, 3636], [4946, 3601], [4930, 3571], [4937, 3525], [4955, 3485], [4967, 3453], [4970, 3409], [4980, 3372], [5001, 3341], [5011, 3317], [5000, 3286], [4993, 3258], [5003, 3234], [5003, 3215], [4993, 3208]],
    [[4888, 3781], [4908, 3781], [4912, 3762], [4927, 3726], [4934, 3686], [4929, 3644], [4928, 3612], [4921, 3570], [4935, 3524], [4947, 3482], [4955, 3440], [4970, 3398], [4986, 3361], [5006, 3329], [5000, 3299], [5002, 3284], [4990, 3263], [5006, 3239], [5007, 3215], [4994, 3208]],
    [[4890, 3784], [4911, 3781], [4913, 3746], [4872, 3742], [4873, 3707], [4879, 3672], [4888, 3631], [4898, 3579], [4894, 3527], [4894, 3489], [4916, 3480], [4953, 3461], [4978, 3421], [4990, 3376], [4996, 3331], [5003, 3292], [5004, 3253], [5006, 3231], [4997, 3209]],
    [[4891, 3783], [4907, 3781], [4920, 3755], [4934, 3717], [4977, 3712], [4996, 3662], [5011, 3619], [4996, 3578], [5010, 3546], [5003, 3498], [4989, 3438], [4990, 3381], [5012, 3329], [5008, 3304], [4998, 3278], [4999, 3247], [5010, 3224], [4997, 3210]],
    [[4887, 3782], [4913, 3781], [4924, 3728], [4954, 3723], [4993, 3706], [4998, 3662], [5012, 3623], [4975, 3591], [4930, 3565], [4946, 3513], [4961, 3483], [4978, 3442], [5003, 3405], [5025, 3364], [5018, 3331], [5005, 3294], [4994, 3261], [5010, 3218], [4996, 3207]],
    [[4889, 3782], [4914, 3781], [4919, 3750], [4935, 3721], [4935, 3673], [4958, 3656], [5004, 3656], [5010, 3601], [5015, 3568], [5023, 3519], [5027, 3472], [5021, 3437], [5027, 3401], [5022, 3355], [5021, 3327], [5016, 3304], [5019, 3267], [5011, 3250], [5007, 3230], [4995, 3208]]
  ];

  with Self.RockColor do
  begin
    RSObject.Colors += CTS2(2437710, 12, 0.10, 0.53);
    RSObject.Grow := 3;
    RSObject.Erode := 4;
    RSObject.ClusterDistance := 3;
    FilterSize := 30;

    RadiusExpand := 0.05;
  end;


  Self.ToBankPaths := [
    [[4993, 3208], [5003, 3215], [5003, 3234], [4993, 3258], [5000, 3286], [5011, 3317], [5001, 3341], [4980, 3372], [4970, 3409], [4967, 3453], [4955, 3485], [4937, 3525], [4930, 3571], [4946, 3601], [4940, 3636], [4935, 3672], [4937, 3701], [4926, 3732], [4913, 3767], [4903, 3783], [4890, 3783]],
    [[4994, 3208], [5007, 3215], [5006, 3239], [4990, 3263], [5002, 3284], [5000, 3299], [5006, 3329], [4986, 3361], [4970, 3398], [4955, 3440], [4947, 3482], [4935, 3524], [4921, 3570], [4928, 3612], [4929, 3644], [4934, 3686], [4927, 3726], [4912, 3762], [4908, 3781], [4888, 3781]],
    [[4997, 3209], [5006, 3231], [5004, 3253], [5003, 3292], [4996, 3331], [4990, 3376], [4978, 3421], [4953, 3461], [4916, 3480], [4894, 3489], [4894, 3527], [4898, 3579], [4888, 3631], [4879, 3672], [4873, 3707], [4872, 3742], [4913, 3746], [4911, 3781], [4890, 3784]],
    [[4997, 3210], [5010, 3224], [4999, 3247], [4998, 3278], [5008, 3304], [5012, 3329], [4990, 3381], [4989, 3438], [5003, 3498], [5010, 3546], [4996, 3578], [5011, 3619], [4996, 3662], [4977, 3712], [4934, 3717], [4920, 3755], [4907, 3781], [4891, 3783]],
    [[4996, 3207], [5010, 3218], [4994, 3261], [5005, 3294], [5018, 3331], [5025, 3364], [5003, 3405], [4978, 3442], [4961, 3483], [4946, 3513], [4930, 3565], [4975, 3591], [5012, 3623], [4998, 3662], [4993, 3706], [4954, 3723], [4924, 3728], [4913, 3781], [4887, 3782]],
    [[4995, 3208], [5007, 3230], [5011, 3250], [5019, 3267], [5016, 3304], [5021, 3327], [5022, 3355], [5027, 3401], [5021, 3437], [5027, 3472], [5023, 3519], [5015, 3568], [5010, 3601], [5004, 3656], [4958, 3656], [4935, 3673], [4935, 3721], [4919, 3750], [4914, 3781], [4889, 3782]]
  ];

  Self.BankTiles := [[4882, 3772]];
  Self.BankWalkTile := [4886, 3772];
  with Self.BankColor do
  begin
    RSObject.Colors += CTS2(605780, 3, 0.10, 0.96);
    RSObject.ColorClusters += [
      CTS2(6120041, 4, 1.11, 1.12), // Grey
      CTS2(1069929, 2, 0.15, 1.05), // Brown
      3];
    RSObject.Grow := 1;
    RSObject.ClusterDistance := 3;

    FilterSize := 10;
    RadiusExpand := 1.5;
    NoColorTileExpand := 5;
  end;


  // expanded mining guild
  Self.BankWalkTile := [6709, 857];
  Self.BankTiles := [[6704, 856]];
  Self.ToBankPaths := [];
  with Self.BankColor do
  begin
    RSObject.Colors += CTS2(6909559, 7, 0.92, 0.55);
    RSObject.Grow := 3;
    RSObject.Erode := 2;
    RSObject.ClusterDistance := 3;

    FilterSize := 10;
    RadiusExpand := 1.5;
    NoColorTileExpand := 5;
  end;

  Self.RockWalkTile := [6743, 857];
  Self.RockTiles := [[6733, 854], [6738, 858], [6738, 850]];
  Self.ToRocksPaths := [];


  
  // do login init stuff
  if RSClient.IsLoggedIn() then
    Self.OnLogin();
  
  // start the timers  
  Script.TrueRunTime.Start();
  Script.ReportCounter.Init(Script.ReportRate);
  Script.DrawCounter.Init(Script.DrawRate);
  
  AddOnTerminate(@Self.Free);
end;

{
  Entry point, inits and starts the bot main loop.
}
begin
  Bot.Init();
  Bot.Run();
end.
