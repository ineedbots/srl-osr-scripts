{
  Al-Kharid Miner misc
  Author: ineedbot
  Date: 7/20/2022

  Misc
}

{$IFNDEF INEEDBOT_AKM_MISC}
{$DEFINE INEEDBOT_AKM_MISC}

{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

{$F-}

{$include_once ../Utils/Utils.simba}

{$include_once Types.simba}
{$include_once Utils.simba}

{
  Drops all the logs in our inventory

  Part of this is from Flight's AIOFisher
}
function TBot.DropItems(MaxToDrop: Int32 = -1): Boolean;
var
  Pattern, OreSlots: TIntegerArray;
  CurOres, i, S: Int32;
begin
  Script.SetStatus('Dropping logs...');

  if not Script.IsFocusing() then
    Self.AfterActionAntiBan(True);

  // query the fish
  Inventory.FindItems(Self.OreItems, OreSlots);
  CurOres := Length(OreSlots);
  Script.WriteMsg('DropItems: Ore slots (before drop): ' + ToStr(OreSlots), True);

  // choose a random drop pattern
  Pattern := Inventory.ChopPattern(Inventory.GetGoodPattern());
  // TODO: make it so first is closest to mouse
  if Script.IsFocusing() then
    Pattern := DROP_PATTERN_REGULAR;

  // only drop logs...
  for i := High(Pattern) downto Low(Pattern) do
    if OreSlots.Find(Pattern[i]) = -1 then
      Pattern.Remove(Pattern[i]);

  if MaxToDrop <> -1 then
  begin
    if Length(Pattern) > MaxToDrop then
      SetLength(Pattern, MaxToDrop);
  end;

  S := Mouse.Speed;
  Mouse.Speed += Script.FastMouseAdd + Random(-2, 2);
  // drop
  if Script.ShiftClicking then
    Inventory.ShiftDrop(Pattern)
  else
  begin
    for i in Pattern do
    begin
      Inventory.HoverSlot(i);

      if MainScreen.IsUpText('Drop') then
        Mouse.Click(MOUSE_LEFT)
      else
        ChooseOption.Select('Drop');

      if not Script.IsFocusing() then
        Wait(0, 1000, wdLeft);
    end;
  end;
  Mouse.Speed := S;

  // see how many logs we actually dropped, and log it
  OreSlots.Clear();
  Inventory.FindItems(Self.OreItems, OreSlots);
  Self.OresDone += CurOres - Length(OreSlots);
  Script.WriteMsg('DropItems: Ore slots (after drop): ' + ToStr(OreSlots), True);

  Script.SetStatus('Ores dropped!');
  Script.WriteMsg('Dropped ores... Currently mined ' + IntToStr(Self.OresDone) + ' ores!');

  if not Script.IsFocusing() then
    Self.AfterActionAntiBan(True);

  if not Inventory.IsFull() then
    Result := True;
end;

{$ENDIF} // INEEDBOT_AKM_MISC
