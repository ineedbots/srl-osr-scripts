{
  BankStander
  Author: ineedbot
  Date: 6/8/2022

  Bank stands
}

program BankStander;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I SRL/OSR.simba}

{$include_once ../Utils/Utils.simba}

{$include_once Types.simba}
{$include_once Config.simba}
{$include_once Utils.simba}

{$include_once Bank.simba}
{$include_once Transform.simba}

{
  Should we create the product?
}
function TBot.ShouldMakeProduct(): Boolean;
var
  Slots: TIntegerArray;
begin
  if Self.StoppedShort then
    exit();

  if not Inventory.FindItems(Self.MaterialItems, Slots) then
    exit();

  if Length(Slots) < Self.MaterialRatio then
    exit();

  Slots.Clear();

  if Length(Self.SecondaryMaterialItems) > 0 then
  begin
    if not Inventory.FindItems(Self.SecondaryMaterialItems, Slots) then
      exit();

    if Length(Slots) < Self.SecondaryMaterialRatio then
      exit();
  end;

  exit(True);
end;

{
  Does logged in stuff
}
procedure TBot.DoLoggedInStuff();
var
  DidIt: Boolean;
begin
  if Bank.IsOpen() or BankPin.IsOpen() then
  begin
    // do banking
    Self.DoBanking();
  end
  else
  begin
    if Self.ShouldMakeProduct() then
    begin
      // do production
      case Self.CreationType of
        ERSCreationType.TRANSFORM: DidIt := Self.DoTransform();
        ERSCreationType.COMBINE: DidIt := Self.DoCombine();
        ERSCreationType.CLEANER: DidIt := Self.DoClean();
        //ERSCreationType.SUPERCOMBAT: Self.DoSupercombat();
      end;

      if not DidIt then
        Self.AfterActionAntiBan(True);
    end
    else
    begin
      // open bank
      if not Self.DoOpenBank() then
        Self.AfterActionAntiBan(True);
    end;
  end;
end;

{
  Main loop of the script.
}
procedure TBot.Run();
begin
  while Script.Running do
  begin
    if RSClient.IsLoggedIn() then
    begin
      Self.DoLoggedInStuff();
    end
    else
    begin
      if Login.LoginPlayer() then
        Self.OnLogin();
    end;

    Self.DoMainLoopStuff('', False);
  end;

  Logout.ClickLogout();
  Script.WriteMsg('Stop reason: ' + Script.StopReason);
  TerminateScript('Time to shutdown');
end;

{
  When the player logs in.
}
procedure TBot.OnLogin();
begin
  // is this the first login?
  if not Script.DidLogin then
  begin
    Script.DidLogin := True;

    MM2MS.ZoomLevel         := Options.GetZoomLevel();
  end;

  Script.HPAmount             := Minimap.GetHPLevel();
  MainScreen.SetHighestPitch();
  Script.Activity.Countdown.Restart();
end;

{
  Frees the stuff when script completes
}
procedure TBot.Free();
begin
end;

{
  Inits the script...
}
procedure TBot.Init();
var
  Worlds: TIntegerArray;
  i: Int32;
  Item: TRSItem;
begin
  // init the player
  if _WORLDS[0] <> -1 then
    Worlds := _WORLDS;

  Login.AddPlayer(_USERNAME, _PASSWORD, _PIN, Worlds);
  Script.AntiBanEnergy.SetupBiometrics();
  Script.AntiBanEnergy.BoxPTRad := 0.3;
  Script.AntiBan.Name := 'Antiban';

  Script.Debug := DEBUGMODE;
  Script.Drawing := DRAWING;
  Script.Reporting := DOREPORTS;   
  Script.ShiftClicking := SHIFTCLICK;
  Script.MiddleClicking := MIDDLECLICK;
  Script.Running := True;
  Script.SleepRate := 75;
  Script.DrawRate := 2500;
  Script.ReportRate := 2500;
  Script.Activity.Countdown.Init(ONE_MINUTE);
  Script.Activity.NoXPCountMax := 4;
  Script.KeyboardMenuButtons := MENUKEYBOARD;

  Script.ShutdownTime := (TOTALRUNTIME * 60000) + Random(- (TOTALRUNTIME * 6000), (TOTALRUNTIME * 6000));

  Mouse.Speed             := 20 + Round(BioRandomFixed() * 10) + Random(-2, 2);
  Script.BaseMouseSpeed := Mouse.Speed;
  Script.MaxTiredMouseSpeed := 10;
  Script.FastMouseAdd    := 20;
  Mouse.Distribution      := MOUSE_DISTRIBUTION_GAUSS;
  ItemFinder.Similarity   := 0.999;
  Mouse.OnMoving := @WhileMouseMovesLookForUpText;

  Script.AllowBreaks := True;

  // init the antiban stuff
  Script.Antiban.OnStartBreak    := @PauseRunTime;
  Script.Antiban.OnFinishBreak   := @ResumeScript;

  Script.Antiban.AddTask(ONE_SECOND*30, @Mouse.RandomMovement);
  Script.Antiban.AddTask(ONE_MINUTE*3, @Antiban.SetCompassNorth);
  Script.Antiban.AddTask(ONE_MINUTE*5,  @Antiban.RandomRotate);
  Script.Antiban.AddTask(ONE_MINUTE*2,  @Antiban.DoLoseFocus);
  Script.Antiban.AddTask(ONE_MINUTE*45,  @Script.UpdateZoomLevel);
  Script.Antiban.AddTask(ONE_MINUTE*4,  @Antiban.HoverMSItems);
  Script.Antiban.AddTask(ONE_MINUTE*4,  @Antiban.HoverMSNPCs);
  Script.Antiban.AddTask(ONE_MINUTE*4,  @Antiban.HoverMSPlayers);
  Script.Antiban.AddTask(ONE_MINUTE*8,  @Self.DoSkillHover);
  Script.Antiban.AddBreak(ONE_MINUTE*18, ONE_SECOND*40, 0.2, 0.0);

  if TAKEBREAKS then
  begin
    Script.Antiban.AddBreak(ONE_MINUTE*45, ONE_MINUTE*5, 0.2, 0.25);
    Script.Antiban.AddBreak(ONE_HOUR*2, ONE_MINUTE*10, 0.2, 0.5);
    Script.Antiban.AddBreak(ONE_HOUR*4, ONE_MINUTE*45, 0.2, 0.75);
    Script.Antiban.AddBreak(ONE_HOUR*17, ONE_HOUR*7, 0.2, 1.0);
  end;

  Self.RSW.Setup(MAP);
  Self.SelfBoxRadiusExpand := 1.5;

  SetLength(Self.BankLocations, Length(BANK_LOCATIONS));
  for i := 0 to High(BANK_LOCATIONS) do
  begin
    Self.BankLocations[i].X := BANK_LOCATIONS[i][0];
    Self.BankLocations[i].Y := BANK_LOCATIONS[i][1];
  end;

  case BANK_COLOR_TYPE of
    ERSBankColorType.FARMING_GUILD_CHEST:
    begin
      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(1789017, 5, 0.11, 0.83);
        RSObject.Colors += CTS2(2968663, 2, 0.41, 0.78);
        RSObject.Colors += CTS2(5206654, 6, 0.07, 0.12);
        RSObject.ClusterDistance := 8;

        FilterSize := 30;
        RadiusExpand := 0.25;    
        NoColorTileExpand := 5;
      end;
    end;
    ERSBankColorType.GRAND_EXCHANGE_BANKER:
    begin
      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(7829633, 11, 0.17, 0.12);
        RSObject.Grow := 2;
        RSObject.Erode := 3;
        RSObject.ClusterDistance := 3;

        FilterSize := 10;
        RadiusExpand := 0.25; 
        NoColorTileExpand := 5;
      end;
    end;
    ERSBankColorType.DRAYNOR_BANK_BOOTH:
    begin
      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(605780, 3, 0.10, 0.96);
        RSObject.ColorClusters += [
          CTS2(6120041, 4, 1.11, 1.12), // Grey
          CTS2(1069929, 2, 0.15, 1.05), // Brown
          3];
        RSObject.Grow := 1;
        RSObject.ClusterDistance := 3;

        FilterSize := 10;
        RadiusExpand := 0.25;        
        NoColorTileExpand := 5;
      end;
    end;
    ERSBankColorType.WINTERTODT_CHEST:
    begin
      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(2631713, 3, 0, 1.25);
        RSObject.Colors += CTS2(3881520, 4, 0.39, 0.23);
        RSObject.ClusterDistance := 8;

        FilterSize := 30;
        RadiusExpand := 0.25;  
        NoColorTileExpand := 5;
      end;
    end;
    ERSBankColorType.VARROCK_WEST_BANK_BOOTH:
    begin
      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(3432558, 3, 0.14, 2.26);
        RSObject.Colors += CTS2(7309971, 6, 0.12, 0.82);
        RSObject.Grow := 1;
        RSObject.ClusterDistance := 3;

        FilterSize := 10;
        RadiusExpand := 0.25;  
        NoColorTileExpand := 5;
      end;
    end;
    ERSBankColorType.BLAST_FURNACE_CHEST:
    begin
      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(2832199, 14, 0.06, 0.10);
        RSObject.Erode := 2;
        RSObject.Grow := 2;
        RSObject.ClusterDistance := 1;

        FilterSize := 5;
        RadiusExpand := 1;
        NoColorTileExpand := 5;
      end;
    end;
  end;

  Self.TransformWaitTime := 3000;
  Self.CreationType := CREATION_TYPE;
  Self.MakeNum := MAKE_NUM;

  Self.MaterialRatio := MATERIAL_RATIO;
  Self.SecondaryMaterialRatio := SECONDARY_MATERIAL_RATIO;

  Self.UsingAmuletOfChem := AMULET_OF_CHEM;
  Self.AmuletCrumbledTexts := [' dust.', 'Your amulet of chemistry helps you create a 4-dose potion. It then crumbles to dust.'];
  Self.AmuletOfChemCountdown.Init(ONE_MINUTE * 10);
  Self.AmuletOfChemItem := 'Amulet of chemistry';

  for Item in TOOLS do
    Self.ToolItems += Item;

  for Item in MATERIALS do
    Self.MaterialItems += Item;

  for Item in SECONDARY_MATERIALS do
    Self.SecondaryMaterialItems += Item;

  for Item in PRODUCTS do
    Self.ProductItems += Item;

  Self.GainingXP := GAINING_XP;

  // do login init stuff
  if RSClient.IsLoggedIn() then
    Self.OnLogin();

  // start the timers
  Script.TrueRunTime.Start();
  Script.ReportCounter.Init(Script.ReportRate);
  Script.DrawCounter.Init(Script.DrawRate);

  AddOnTerminate(@Self.Free);
end;

{
  Entry point, inits and starts the bot main loop.
}
begin
  Bot.Init();
  Bot.Run();
end.
