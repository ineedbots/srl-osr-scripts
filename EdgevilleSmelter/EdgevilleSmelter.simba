{
  EdgevilleSmelter
  Author: ineedbot
  Date: 7/9/2022

  Smelts stuff at edgeville
}

program EdgevilleSmelter;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I SRL/OSR.simba}

{$include_once ../Utils/Utils.simba}

{$include_once Types.simba}
{$include_once Config.simba}
{$include_once Utils.simba}
                           
{$include_once Bank.simba}
{$include_once Station.simba}
{$include_once Door.simba}

{
  Main loop of the script.
}
procedure TBot.Run();
begin
  while Script.Running do
  begin
    if RSClient.IsLoggedIn() then
    begin
      if Self.ShouldDoStation() then
      begin
        if not Self.DoStation() then
          Self.AfterActionAntiBan(True);
      end
      else
      begin
        if not Self.DoBank() then
          Self.AfterActionAntiBan(True);
      end;
    end
    else
    begin
      if Login.LoginPlayer() then
        Self.OnLogin();
    end;
    
    Self.DoMainLoopStuff('', False);
  end;
  
  Logout.ClickLogout();
  Script.WriteMsg('Stop reason: ' + Script.StopReason);
  TerminateScript('Time to shutdown');
end;

{
  When the player logs in.
}
procedure TBot.OnLogin();
begin
  // is this the first login?
  if not Script.DidLogin then
  begin
    Script.DidLogin := True;
      
    Script.UpdateZoomLevel();
  end;
  
  Script.HPAmount             := Minimap.GetHPLevel();
  MainScreen.SetHighestPitch();
  Script.Activity.Countdown.Restart();
end;

{
  Frees the stuff when script completes
}
procedure TBot.Free();
begin
end;

{
  Inits the script...
}
procedure TBot.Init();
var
  Worlds: TIntegerArray;
  Item: TRSItem;
  i: Int32;
begin
  // init the player
  if _WORLDS[0] <> -1 then
    Worlds := _WORLDS;

  Login.AddPlayer(_USERNAME, _PASSWORD, _PIN, Worlds);
  Script.AntiBanEnergy.SetupBiometrics();
  Script.AntiBanEnergy.BoxPTRad := 0.3;
  Script.AntiBan.Name := 'Antiban';

  Script.Debug := DEBUGMODE;
  Script.Drawing := DRAWING;
  Script.Reporting := DOREPORTS;
  Script.ShiftClicking := SHIFTCLICK;
  Script.MiddleClicking := MIDDLECLICK;
  Script.KeyboardMenuButtons := MENUKEYBOARD;
  Script.Running := True;
  Script.SleepRate := 75;
  Script.DrawRate := 2500;
  Script.ReportRate := 2500;
  Script.Activity.Countdown.Init(ONE_MINUTE);
  Script.Activity.NoXPCountMax := 4;
  
  Script.ShutdownTime := (TOTALRUNTIME * 60000) + Random(- (TOTALRUNTIME * 6000), (TOTALRUNTIME * 6000));
  
  Mouse.Speed             := 20 + Round(BioRandomFixed() * 10) + Random(-2, 2);
  Script.BaseMouseSpeed := Mouse.Speed;
  Script.MaxTiredMouseSpeed := 10;
  Script.FastMouseAdd    := 20;
  Mouse.Distribution      := MOUSE_DISTRIBUTION_GAUSS;
  ItemFinder.Similarity   := 0.999;
  Mouse.OnMoving := @WhileMouseMovesLookForUpText;

  Script.AllowBreaks := True;
  
  // init the antiban stuff
  Script.Antiban.OnStartBreak    := @PauseRunTime;
  Script.Antiban.OnFinishBreak   := @ResumeRunTime;
  
  Script.Antiban.AddTask(ONE_SECOND*30, @Mouse.RandomMovement);
  Script.Antiban.AddTask(ONE_SECOND*45, @Antiban.SetCompassNorth);
  Script.Antiban.AddTask(ONE_MINUTE*1,  @Antiban.RandomRotate);
  Script.Antiban.AddTask(ONE_MINUTE*2,  @Antiban.DoLoseFocus);
  Script.Antiban.AddTask(ONE_MINUTE*45,  @Script.UpdateZoomLevel);
  Script.Antiban.AddTask(ONE_MINUTE*4,  @Antiban.HoverMSItems);
  Script.Antiban.AddTask(ONE_MINUTE*4,  @Antiban.HoverMSNPCs);
  Script.Antiban.AddTask(ONE_MINUTE*4,  @Antiban.HoverMSPlayers);
  Script.Antiban.AddTask(ONE_MINUTE*8,  @Self.DoSkillHover);
  Script.Antiban.AddBreak(ONE_MINUTE*18, ONE_SECOND*40, 0.2, 0.0);
  
  if TAKEBREAKS then
  begin
    Script.Antiban.AddBreak(ONE_MINUTE*45, ONE_MINUTE*5, 0.2, 0.25);
    Script.Antiban.AddBreak(ONE_HOUR*2, ONE_MINUTE*10, 0.2, 0.5);
    Script.Antiban.AddBreak(ONE_HOUR*4, ONE_MINUTE*45, 0.2, 0.75);
    Script.Antiban.AddBreak(ONE_HOUR*17, ONE_HOUR*7, 0.2, 1.0);
  end;

  Self.RSW.Setup('world');
  Self.RSW.ScreenWalk     := MSWALKING;

  Self.StationType := STATION_TYPE; 
  Self.MakeOption := MAKE_NUM;

  Self.UsingRingOfForging := USING_RING_OF_FORGING;
  Self.RingOfForgingItem := 'Ring of forging';
  Self.RingOfForgingCountdown.Init(ONE_MINUTE * 10);
  Self.RingOfForgingCharges := 140;
  Self.RingOfForgingBrokeTexts := ['Ring of ', 'Your Ring of Forging has melted.'];

  case Self.StationType of
    EStationType.AL_KHARID_RANGE:
    begin
      SetLength(Self.Doors, 1);
      with Self.Doors[0] do
      begin
        Zones := [[[4892, 3714], [4912, 3715], [4912, 3734], [4892, 3733]]];
        UpTexts := ['Open'];
        Options := ['Open'];

        with ClosedColor do
        begin
          RSObject.Colors += CTS2(2316912, 4, 0.09, 0.72);
          RSObject.Colors += CTS2(3044754, 4, 0.06, 0.41);
          RSObject.ClusterDistance := 2;
          RSObject.Erode := 1;
          RSObject.Grow := 2;
          FilterSize := 10;
          RadiusExpand := 1.1;
          NoColorTileExpand := 5;
        end;

        ClosedTile := [4911, 3728];

        HasOpenDoorData := True;
        CompAngle := 0;
        OpenedTile := [4911, 3725];

        with OpenedColor do
        begin
          RSObject.ColorClusters += [
            CTS2(12700362, 1, 0.01, 0.01),
            CTS2(5138796, 4, 0.23, 0.23),
            3
          ];
          RSObject.ColorClusters += [
            CTS2(12700362, 1, 0.01, 0.01),
            CTS2(6131867, 6, 0.05, 0.44),
            3
          ];
          RSObject.ClusterDistance := 1;
          RSObject.Erode := 0;
          RSObject.Grow := 0;
          RSObject.MinShortSide := 2;
          FilterSize := 5;
          RadiusExpand := 1.1;
        end;
      end;

      Self.StationWaitTime := 4000;

      Self.StationTiles := [[4896, 3728]];
      Self.StationWalkTile := [4899, 3728];
      Self.StationUptexts := ['Cook'];
      Self.StationOptions := ['Cook'];
      with Self.StationColor do
      begin
        RSObject.Colors += CTS2(3158068, 6, 0.01, 0.45);
        RSObject.Grow := 3;
        RSObject.Erode := 2;
        RSObject.ClusterDistance := 2;

        FilterSize := 10;
        RadiusExpand := 1.5;
        NoColorTileExpand := 5;
      end;

      Self.BankTiles := [[4882, 3772]];
      Self.BankWalkTile := [4886, 3772];
      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(605780, 3, 0.10, 0.96);
        RSObject.ColorClusters += [
          CTS2(6120041, 4, 1.11, 1.12), // Grey
          CTS2(1069929, 2, 0.15, 1.05), // Brown
          3];
        RSObject.Grow := 1;
        RSObject.ClusterDistance := 3;

        FilterSize := 10;
        RadiusExpand := 1.5;
        NoColorTileExpand := 5;
      end;

      Self.ToStationPaths := [
        [[4887, 3772], [4898, 3782], [4909, 3783], [4913, 3763], [4915, 3750], [4918, 3739], [4916, 3728], [4905, 3727], [4899, 3728]],
        [[4886, 3771], [4896, 3781], [4907, 3781], [4912, 3766], [4912, 3748], [4920, 3731], [4917, 3728], [4907, 3728], [4900, 3728]],
        [[4886, 3773], [4894, 3782], [4902, 3788], [4904, 3771], [4904, 3761], [4905, 3736], [4916, 3729], [4902, 3727]],
        [[4884, 3773], [4888, 3792], [4891, 3781], [4907, 3776], [4911, 3757], [4927, 3747], [4929, 3723], [4917, 3727], [4906, 3727], [4899, 3726]]
      ];

      Self.ToBankPaths := [
        [[4899, 3728], [4905, 3727], [4916, 3728], [4918, 3739], [4915, 3750], [4913, 3763], [4909, 3783], [4898, 3782], [4887, 3772]],
        [[4900, 3728], [4907, 3728], [4917, 3728], [4920, 3731], [4912, 3748], [4912, 3766], [4907, 3781], [4896, 3781], [4886, 3771]],
        [[4902, 3727], [4916, 3729], [4905, 3736], [4904, 3761], [4904, 3771], [4902, 3788], [4894, 3782], [4886, 3773]],
        [[4899, 3726], [4906, 3727], [4917, 3727], [4929, 3723], [4927, 3747], [4911, 3757], [4907, 3776], [4891, 3781], [4888, 3792], [4884, 3773]]
      ];
    end;
    EStationType.EDGEVILLE_SMELTER:
    begin
      Self.StationWaitTime := 6500;

      Self.StationUptexts := ['Smelt'];
      Self.StationOptions := ['Smelt'];
      Self.StationWalkTile := [4245, 2452];
      Self.StationTiles := [[4248, 2452]];

      Self.ToStationPaths := [
        [[4198, 2471], [4198, 2463], [4207, 2463], [4226, 2455], [4232, 2455], [4243, 2455]],
        [[4199, 2471], [4194, 2460], [4207, 2463], [4217, 2458], [4228, 2455], [4239, 2455]],
        [[4199, 2472], [4198, 2464], [4211, 2471], [4221, 2453], [4233, 2456], [4242, 2456]],
        [[4198, 2471], [4195, 2456], [4210, 2459], [4214, 2448], [4222, 2452], [4233, 2450], [4242, 2453]],
        [[4198, 2472], [4182, 2462], [4179, 2443], [4190, 2441], [4208, 2439], [4216, 2453], [4238, 2453]]
      ];

      with Self.StationColor do
      begin
        RSObject.Colors += CTS2(4019575, 3, 0.15, 0.45);
        RSObject.Grow := 3;
        RSObject.Erode := 2;
        RSObject.ClusterDistance := 2;

        FilterSize := 10;
        RadiusExpand := 1.5;
        NoColorTileExpand := 5;
      end;


      Self.BankTiles := [[4202, 2476], [4198, 2476]];
      Self.BankWalkTile := [4202, 2472];

      Self.ToBankPaths := [
        [[4243, 2455], [4232, 2455], [4226, 2455], [4207, 2463], [4198, 2463], [4198, 2471]],
        [[4239, 2455], [4228, 2455], [4217, 2458], [4207, 2463], [4194, 2460], [4199, 2471]],
        [[4242, 2456], [4233, 2456], [4221, 2453], [4211, 2471], [4198, 2464], [4199, 2472]],
        [[4242, 2453], [4233, 2450], [4222, 2452], [4214, 2448], [4210, 2459], [4195, 2456], [4198, 2471]],
        [[4238, 2453], [4216, 2453], [4208, 2439], [4190, 2441], [4179, 2443], [4182, 2462], [4198, 2472]]
      ];

      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(605780, 3, 0.10, 0.96);
        RSObject.ColorClusters += [
          CTS2(6120041, 4, 1.11, 1.12), // Grey
          CTS2(1069929, 2, 0.15, 1.05), // Brown
          3];
        RSObject.Grow := 1;
        RSObject.ClusterDistance := 3;

        FilterSize := 10;
        RadiusExpand := 1.5;
        NoColorTileExpand := 5;
      end;
    end;
    EStationType.VARROCK_WEST_ANVIL:
    begin
      Self.ToStationPaths := [
        [[4550, 2704], [4542, 2709], [4543, 2724], [4555, 2735], [4561, 2740]],
        [[4548, 2704], [4538, 2704], [4538, 2712], [4540, 2722], [4547, 2723], [4554, 2723], [4555, 2731], [4555, 2743], [4561, 2742]],
        [[4547, 2703], [4537, 2706], [4542, 2711], [4535, 2724], [4554, 2730], [4557, 2741], [4565, 2744]]
      ];
      Self.StationWaitTime := 4000;
      Self.StationWalkTile := [4562, 2740];
      Self.StationTiles := [[4562, 2744]];
      Self.StationUptexts := ['Smith'];
      Self.StationOptions := ['Smith'];
      with Self.StationColor do
      begin
        RSObject.Colors += CTS2(5855839, 6, 0.48, 0.09);
        RSObject.Grow := 3;
        RSObject.Erode := 2;
        RSObject.ClusterDistance := 2;

        FilterSize := 10;
        RadiusExpand := 1.5;
        NoColorTileExpand := 5;
      end;

      Self.ToBankPaths := [
        [[4561, 2740], [4555, 2735], [4543, 2724], [4542, 2709], [4550, 2704]],
        [[4561, 2742], [4555, 2743], [4555, 2731], [4554, 2723], [4547, 2723], [4540, 2722], [4538, 2712], [4538, 2704], [4548, 2704]],
        [[4565, 2744], [4557, 2741], [4554, 2730], [4535, 2724], [4542, 2711], [4537, 2706], [4547, 2703]]
      ];
      Self.BankTiles := [[4554, 2704]];
      Self.BankWalkTile := [4551, 2704];
      with Self.BankColor do
      begin
        RSObject.Colors += CTS2(3432558, 3, 0.14, 2.26);
        RSObject.Colors += CTS2(7309971, 6, 0.12, 0.82);
        RSObject.Grow := 1;
        RSObject.ClusterDistance := 3;

        FilterSize := 10;
        RadiusExpand := 0.25;
        NoColorTileExpand := 5;
      end;
    end;
  end;

  // SRL TODO  craftscreen and smithscreen
  Self.UsingInterfaceMake := MAKE_INTERFACE;
  for i := 0 to 3 do
  begin
    if i = 0 then
      Self.InterfaceMakeBox.X1 := MAKE_INTERFACE_BOX[i]
    else if i = 1 then
      Self.InterfaceMakeBox.Y1 := MAKE_INTERFACE_BOX[i]
    else if i = 2 then
      Self.InterfaceMakeBox.X2 := MAKE_INTERFACE_BOX[i]
    else
      Self.InterfaceMakeBox.Y2 := MAKE_INTERFACE_BOX[i];
  end;

  for Item in TOOLS do
    Self.ToolItems += Item;

  for Item in MATERIALS do
    Self.MaterialItems += Item;

  for Item in PRODUCTS do
    Self.ProductItems += Item;

  for Item in SECONDARY_MATERIALS do
    Self.SecondaryMaterialItems += Item;

  Self.SecondaryMaterialRatio := SECONDARY_MATERIAL_RATIO;
  Self.MaterialRatio := MATERIAL_RATIO;
  
  // do login init stuff
  if RSClient.IsLoggedIn() then
    Self.OnLogin();
  
  // start the timers  
  Script.TrueRunTime.Start();
  Script.ReportCounter.Init(Script.ReportRate);
  Script.DrawCounter.Init(Script.DrawRate);
  
  AddOnTerminate(@Self.Free);
end;

{
  Entry point, inits and starts the bot main loop.
}
begin
  Bot.Init();
  Bot.Run();
end.
