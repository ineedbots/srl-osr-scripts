{
  Motherload Miner
  Author: ineedbot
  Date: 8/27/2022

  Mines at Motherload Mine
}

program MotherloadMiner;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I SRL/OSR.simba}

{$include_once ../Utils/Utils.simba}

{$include_once Types.simba}
{$include_once Config.simba}
{$include_once Utils.simba}

{$include_once Bank.simba}
{$include_once Crate.simba}
{$include_once Hopper.simba}
{$include_once Ladder.simba}
{$include_once Rockfall.simba}
{$include_once Sack.simba}
{$include_once Strut.simba}
{$include_once Vein.simba}

{
  Main loop of the script.
}
procedure TBot.Run();
begin
  while Script.Running do
  begin
    if RSClient.IsLoggedIn() then
    begin
      Self.RSW.DebugPosition();
    end
    else
    begin
      if Login.LoginPlayer() then
        Self.OnLogin();
    end;
    
    Self.DoMainLoopStuff('', False);
  end;
  
  Logout.ClickLogout();
  Script.WriteMsg('Stop reason: ' + Script.StopReason);
  TerminateScript('Time to shutdown');
end;

{
  When the player logs in.
}
procedure TBot.OnLogin();
begin
  // is this the first login?
  if not Script.DidLogin then
  begin
    Script.DidLogin := True;
      
    Script.UpdateZoomLevel();
  end;
  
  Script.HPAmount             := Minimap.GetHPLevel();
  MainScreen.SetHighestPitch();
  Script.Activity.Countdown.Restart();
end;

{
  Frees the stuff when script completes
}
procedure TBot.Free();
begin
  Script.WriteMsg('Finishing the script at: ' + ToStr(Now()));
  Script.TakeScreenshot('MotherloadMiner', 'Ending_');

  FreeDTM(Self.DTM_PayDirt);
end;

{
  Inits the script...
}
procedure TBot.Init();
var
  Worlds: TIntegerArray;
begin
  Script.WriteMsg('Starting the script at: ' + ToStr(Now()));
  AddOnTerminate(@Self.Free);

  // init the player
  if _WORLDS[0] <> -1 then
    Worlds := _WORLDS;

  Login.AddPlayer(_USERNAME, _PASSWORD, _PIN, Worlds);
  Script.AntiBanEnergy.SetupBiometrics();
  Script.AntiBanEnergy.BoxPTRad := 0.3;
  Script.AntiBan.Name := 'Antiban';

  Script.Debug := DEBUGMODE;
  Script.Drawing := DRAWING;
  Script.Reporting := DOREPORTS;
  Script.ShiftClicking := SHIFTCLICK;
  Script.MiddleClicking := MIDDLECLICK;
  Script.KeyboardMenuButtons := MENUKEYBOARD;
  Script.Running := True;
  Script.SleepRate := 75;
  Script.DrawRate := 2500;
  Script.ReportRate := 2500;
  Script.Activity.Countdown.Init(ONE_MINUTE);
  Script.Activity.NoXPCountMax := 4;
  
  Script.ShutdownTime := (TOTALRUNTIME * 60000) + Random(- (TOTALRUNTIME * 6000), (TOTALRUNTIME * 6000));
  
  Mouse.Speed             := 20 + Round(BioRandomFixed() * 10) + Random(-2, 2);
  Script.BaseMouseSpeed := Mouse.Speed;
  Script.MaxTiredMouseSpeed := 10;
  Script.FastMouseAdd    := 20;
  Mouse.Distribution      := MOUSE_DISTRIBUTION_GAUSS;
  ItemFinder.Similarity   := ITEMFINDER_SIMILARITY;
  Mouse.OnMoving := @WhileMouseMovesLookForUpText;

  Script.AllowBreaks := True;
  Bank.FINDER_UPTEXT.Append('Deposit');
  Bank.FINDER_OPTION.Append('Deposit');
  
  // init the antiban stuff
  Script.Antiban.OnStartBreak    := @PauseRunTime;
  Script.Antiban.OnFinishBreak   := @ResumeRunTime;
  
  Script.Antiban.AddTask(ONE_MINUTE*1, @Mouse.RandomMovement);
  Script.Antiban.AddTask(ONE_SECOND*90, @Antiban.SetCompassNorth);
  //Script.Antiban.AddTask(ONE_MINUTE*1,  @Antiban.RandomRotate);
  Script.Antiban.AddTask(ONE_MINUTE*4,  @Antiban.DoLoseFocus);
  Script.Antiban.AddTask(ONE_MINUTE*45,  @Script.UpdateZoomLevel);
  Script.Antiban.AddTask(ONE_MINUTE*8,  @Antiban.HoverMSItems);
  Script.Antiban.AddTask(ONE_MINUTE*12,  @Antiban.HoverMSNPCs);
  Script.Antiban.AddTask(ONE_MINUTE*16,  @Antiban.HoverMSPlayers);
  Script.Antiban.AddTask(ONE_MINUTE*10,  @Self.DoSkillHover);
  Script.Antiban.AddBreak(ONE_MINUTE*18, ONE_SECOND*40, 0.2, 0.0);
  
  if TAKEBREAKS then
  begin
    Script.Antiban.AddBreak(ONE_MINUTE*45, ONE_MINUTE*5, 0.2, 0.25);
    Script.Antiban.AddBreak(ONE_HOUR*2, ONE_MINUTE*10, 0.2, 0.5);
    Script.Antiban.AddBreak(ONE_HOUR*4, ONE_MINUTE*45, 0.2, 0.75);
    Script.Antiban.AddBreak(ONE_HOUR*17, ONE_HOUR*7, 0.2, 1.0);
  end;

  Self.RSW.Setup({$MACRO CURRENT_DIRECTORY} + '\maps\mlm.png');
  Self.RSW.ScreenWalk     := MSWALKING;

  Self.HammerItem := 'Hammer';
  Self.PayDirtItem := 'Pay-dirt';
  // flight!
  Self.DTM_PayDirt := DTMFromString('mKgEAAHicpc3NCkBQEIbhOZ1sucizcwVW7CQ/G+6IiKQUG7kZr8wNYOr5msV8jS8imRVJVIRY9xQFapSo0NjnPsdsRDqMWNSBDSd2rJgwoEWP0Dm+mtcC0vvgbv+fCz5nFGI=');
  Self.GemBagItem := 'Open gem bag';

  Self.OreItems := ['Coal', 'Gold ore', 'Mithril ore', 'Adamantite ore', 'Runite ore'];
  Self.ToolItems := ['Bronze pickaxe', 'Iron pickaxe', 'Steel pickaxe', 'Black pickaxe', 'Mithril pickaxe', 'Adamant pickaxe',
    'Rune pickaxe', 'Gilded pickaxe', 'Dragon pickaxe', '3rd age pickaxe', 'Crystal pickaxe', Self.GemBagItem, Self.HammerItem];

  Self.BankTiles := [[250, 154]];
  Self.BankWalkTile := [246, 154];

  with Self.BankColor do
  begin
    RSObject.Colors += CTS2(6650501, 9, 0.07, 0.40);
    RSObject.Grow := 3;
    RSObject.Erode := 2;
    RSObject.ClusterDistance := 3;

    FilterSize := 10;
    RadiusExpand := 1.5;
    NoColorTileExpand := 5;
  end;

  Self.ToBankPaths := [];
  
  // do login init stuff
  if RSClient.IsLoggedIn() then
    Self.OnLogin();
  
  // start the timers  
  Script.TrueRunTime.Start();
  Script.ReportCounter.Init(Script.ReportRate);
  Script.DrawCounter.Init(Script.DrawRate);
end;

{
  Entry point, inits and starts the bot main loop.
}
begin
  Bot.Init();
  Bot.Run();
end.
